---
interface Props {
  name: string;
  category: string;
  rating: number;
  description: string;
  imageUrl?: string;
  href: string;
}

const { name, category, rating, description, imageUrl = '/placeholder.svg', href } = Astro.props;

// Generate star rating display
const fullStars = Math.floor(rating);
const hasHalfStar = rating - fullStars >= 0.5;
const emptyStars = 5 - fullStars - (hasHalfStar ? 1 : 0);
---

<a href={href} class="block group h-full">
  <div class="bg-bg2 rounded-lg border-2 border-black shadow-[4px_4px_0px_0px_rgba(0,0,0,1)] p-4 transition-all hover:-translate-y-1 hover:shadow-[6px_6px_0px_0px_rgba(0,0,0,1)] flex flex-col h-full">
    <div class="flex items-center gap-4 mb-4">
      <div class="flex-shrink-0 w-16 h-16 rounded-full overflow-hidden border-2 border-black">
        <img 
          src={imageUrl} 
          alt={name}
          class="w-full h-full object-cover"
        />
      </div>
      
      <div>
        <h3 class="text-xl font-bold group-hover:text-purple-600 line-clamp-1">{name}</h3>
        <p class="text-sm text-gray-500">{category}</p>
        
        <div class="flex mt-1">
          {Array(fullStars).fill(0).map(() => (
            <svg class="w-4 h-4 text-yellow-500" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="currentColor">
              <path fill-rule="evenodd" d="M10.788 3.21c.448-1.077 1.976-1.077 2.424 0l2.082 5.007 5.404.433c1.164.093 1.636 1.545.749 2.305l-4.117 3.527 1.257 5.273c.271 1.136-.964 2.033-1.96 1.425L12 18.354 7.373 21.18c-.996.608-2.231-.29-1.96-1.425l1.257-5.273-4.117-3.527c-.887-.76-.415-2.212.749-2.305l5.404-.433 2.082-5.006z" clip-rule="evenodd" />
            </svg>
          ))}
          
          {hasHalfStar && (
            <svg class="w-4 h-4 text-yellow-500" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="currentColor">
              <path fill-rule="evenodd" d="M10.788 3.21c.448-1.077 1.976-1.077 2.424 0l2.082 5.007 5.404.433c1.164.093 1.636 1.545.749 2.305l-4.117 3.527 1.257 5.273c.271 1.136-.964 2.033-1.96 1.425L12 18.354 7.373 21.18c-.996.608-2.231-.29-1.96-1.425l1.257-5.273-4.117-3.527c-.887-.76-.415-2.212.749-2.305l5.404-.433 2.082-5.006z" clip-rule="evenodd" />
            </svg>
          )}
          
          {Array(emptyStars).fill(0).map(() => (
            <svg class="w-4 h-4 text-gray-300" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="currentColor">
              <path fill-rule="evenodd" d="M10.788 3.21c.448-1.077 1.976-1.077 2.424 0l2.082 5.007 5.404.433c1.164.093 1.636 1.545.749 2.305l-4.117 3.527 1.257 5.273c.271 1.136-.964 2.033-1.96 1.425L12 18.354 7.373 21.18c-.996.608-2.231-.29-1.96-1.425l1.257-5.273-4.117-3.527c-.887-.76-.415-2.212.749-2.305l5.404-.433 2.082-5.006z" clip-rule="evenodd" />
            </svg>
          ))}
          
          <span class="ml-2 text-sm font-medium text-gray-600">{rating.toFixed(1)}</span>
        </div>
      </div>
    </div>
    
    <p class="text-gray-600 flex-grow line-clamp-3 min-h-[4.5rem]">{description}</p>
    
    <div class="mt-4">
      <span class="inline-flex items-center text-purple-600 font-bold">
        View Details <span class="ml-2">â†’</span>
      </span>
    </div>
  </div>
</a> 