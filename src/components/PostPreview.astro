---
interface Props {
  url: string;
  title: string;
  description: string;
  pubDate: Date;
}

const { url, title, description, pubDate } = Astro.props;

// Format the date
const formattedDate = new Intl.DateTimeFormat('en-US', {
  year: 'numeric',
  month: 'short',
  day: 'numeric'
}).format(pubDate);
---

<a href={url} class="block group h-full">
  <div class="bg-bg2 rounded-lg border-2 border-border shadow-[4px_4px_0px_0px_rgba(0,0,0,1)] overflow-hidden transition-all hover:-translate-y-1 hover:shadow-[6px_6px_0px_0px_rgba(0,0,0,1)] flex flex-col h-full">
    <div class="p-4 flex flex-col flex-grow">
      <div class="flex items-center justify-between mb-2">
        <span class="text-sm font-medium bg-bg2 px-2 py-1 rounded">{url.split('/')[1]}</span>
        <span class="text-sm text-muted-foreground">{formattedDate}</span>
      </div>
      
      <h3 class="text-xl font-bold mb-2 group-hover:text-mainAccent line-clamp-2">{title}</h3>
      <p class="text-text opacity-80 line-clamp-3 flex-grow">{description}</p>
      
      <div class="mt-4 text-mainAccent font-medium flex items-center">
        Read more
        <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="ml-1 h-4 w-4">
          <path d="M5 12h14"></path>
          <path d="m12 5 7 7-7 7"></path>
        </svg>
      </div>
    </div>
  </div>
</a>
